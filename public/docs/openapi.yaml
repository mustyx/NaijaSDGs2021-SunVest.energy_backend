openapi: 3.0.3
info:
    title: Sunvest
    description: ''
    version: 1.0.0
servers:
    -
        url: 'https://api.sunvest.test'
paths:
    /register:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /login:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /logout:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /admin:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Dashboard - ADMIN'
            security: []
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Dashboard - ADMIN'
            security: []
    '/admin/{}':
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: ''
                                    exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                                    file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\AbstractRouteCollection.php'
                                    line: 43
                                    trace: [{ file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\RouteCollection.php', line: 162, function: handleMatchedRoute, class: Illuminate\Routing\AbstractRouteCollection, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 647, function: match, class: Illuminate\Routing\RouteCollection, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 636, function: findRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 625, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 86, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 611, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 92, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: '' }
                                    exception: { type: string, example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException }
                                    file: { type: string, example: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\AbstractRouteCollection.php' }
                                    line: { type: integer, example: 43 }
                                    trace: { type: array, example: [{ file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\RouteCollection.php', line: 162, function: handleMatchedRoute, class: Illuminate\Routing\AbstractRouteCollection, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 647, function: match, class: Illuminate\Routing\RouteCollection, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 636, function: findRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 625, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 86, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 611, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 92, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - 'Dashboard - ADMIN'
            security: []
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Dashboard - ADMIN'
            security: []
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Dashboard - ADMIN'
            security: []
        parameters:
            -
                in: path
                name: ''
                description: ''
                example: est
                required: true
                schema:
                    type: string
    /:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: true
                                properties:
                                    success: { type: boolean, example: true }
            tags:
                - Endpoints
            security: []
    /me:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: api.sunvest.test
                                properties:
                                    success: { type: string, example: api.sunvest.test }
            tags:
                - Endpoints
            security: []
    '/email/verify/{id}/{hash}':
        get:
            summary: 'Mark the authenticated user''s email address as verified.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                403:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Invalid signature.'
                                    exception: Illuminate\Routing\Exceptions\InvalidSignatureException
                                    file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ValidateSignature.php'
                                    line: 26
                                    trace: [{ file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ValidateSignature, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\app\Http\Middleware\RedirectIfAuthenticated.php', line: 30, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: App\Http\Middleware\RedirectIfAuthenticated, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 50, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 63, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\EncryptCookies.php', line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php', line: 33, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Laravel\Sanctum\Http\Middleware\{closure}', class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php', line: 34, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 695, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 670, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 636, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 625, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 86, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 611, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 92, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'Invalid signature.' }
                                    exception: { type: string, example: Illuminate\Routing\Exceptions\InvalidSignatureException }
                                    file: { type: string, example: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ValidateSignature.php' }
                                    line: { type: integer, example: 26 }
                                    trace: { type: array, example: [{ file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ValidateSignature, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\app\Http\Middleware\RedirectIfAuthenticated.php', line: 30, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: App\Http\Middleware\RedirectIfAuthenticated, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 50, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 63, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\EncryptCookies.php', line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php', line: 33, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Laravel\Sanctum\Http\Middleware\{closure}', class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php', line: 34, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 695, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 670, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 636, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 625, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 86, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 611, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 92, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'C:\Users\OluDre\work\appyclan\projects\sunvest\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: vitae
                required: true
                schema:
                    type: string
            -
                in: path
                name: hash
                description: ''
                example: aut
                required: true
                schema:
                    type: string
    /email/verification-notification:
        post:
            summary: 'Send a new email verification notification.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /user/investments:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Investments
            security: []
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Investments
            security: []
    '/user/investments/{investment}':
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Investments
            security: []
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Investments
            security: []
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Investments
            security: []
        parameters:
            -
                in: path
                name: investment
                description: ''
                example: perferendis
                required: true
                schema:
                    type: string
    /admin/investments:
        get:
            summary: 'GET Investments'
            description: 'List all investments'
            parameters:
                -
                    in: query
                    name: page
                    description: 'Which page to show.'
                    example: 3
                    required: false
                    schema:
                        type: integer
                        description: 'Which page to show.'
                        example: 3
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Investments - ADMIN'
            security: []
        post:
            summary: 'POST Investment'
            description: 'Create a new investment'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Investments - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: 'Id/username of user.'
                                    example: '5,"dre-1"'
                                project_id:
                                    type: string
                                    description: 'Id/slug of project item.'
                                    example: aut
                                cells:
                                    type: integer
                                    description: 'Total number of cells the user wishes to invest in.'
                                    example: 10
                            required:
                                - user_id
                                - project_id
                                - cells
            security: []
    '/admin/investments/{investment}':
        get:
            summary: 'GET Single Investment'
            description: 'Get information on a single investment'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Investments - ADMIN'
            security: []
        put:
            summary: 'PUT Investment'
            description: 'Update investment data. This should be a POST request'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Investments - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: 'Id/username of user.'
                                    example: '5,"dre-1"'
                                project_id:
                                    type: string
                                    description: 'Id/slug of project item.'
                                    example: omnis
                                cells:
                                    type: integer
                                    description: 'Total number of cells the user wishes to invest in.'
                                    example: 10
                                _method:
                                    type: string
                                    description: 'This will tell backend to see it as an update request.'
                                    example: '"PUT"'
                            required:
                                - user_id
                                - project_id
                                - cells
                                - _method
            security: []
        delete:
            summary: 'DELETE Investment'
            description: 'Soft delete a investment. This should be a POST request'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Investments - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                _method:
                                    type: string
                                    description: 'This will tell backend that its actually a delete request.'
                                    example: '"DELETE"'
                            required:
                                - _method
            security: []
        parameters:
            -
                in: path
                name: investment
                description: ''
                example: corporis
                required: true
                schema:
                    type: string
    /user/projects:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Projects
            security: []
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Projects
            security: []
    '/user/projects/{project}':
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Projects
            security: []
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Projects
            security: []
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Projects
            security: []
        parameters:
            -
                in: path
                name: project
                description: ''
                example: ullam
                required: true
                schema:
                    type: string
    /admin/projects:
        get:
            summary: 'GET Projects'
            description: 'List all projects'
            parameters:
                -
                    in: query
                    name: page
                    description: 'Which page to show.'
                    example: 3
                    required: false
                    schema:
                        type: integer
                        description: 'Which page to show.'
                        example: 3
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Projects - ADMIN'
            security: []
        post:
            summary: 'POST Project'
            description: 'Create a new project'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Projects - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: 'Name of project.'
                                    example: '"5KVA Solar Mini-Grid"'
                                description:
                                    type: string
                                    description: 'Detailed description of projects.'
                                    example: qui
                                total_cells:
                                    type: integer
                                    description: 'Total number of cells the project has.'
                                    example: 50
                                cost_per_cell:
                                    type: integer
                                    description: 'Investment cost per cell.'
                                    example: 5000
                                profit:
                                    type: numeric
                                    description: 'Expected percentage profit after maturity'
                                    example: '10.5'
                                maturity_period:
                                    type: integer
                                    description: 'How long it will take for investment to mature in weeks.'
                                    example: 20
                                start_date:
                                    type: 'date_format:d/m/Y'
                                    description: 'When project development will start.'
                                    example: '"25/04/2021"'
                                end_date:
                                    type: string
                                    description: 'The value must be a valid date in the format d/m/Y.'
                                    example: 09/04/2021
                                ad_due_date:
                                    type: 'date_format:d/m/Y'
                                    description: 'When this investment ad will expire.'
                                    example: '"20/04/2021"'
                                due_date:
                                    type: 'date_format:d/m/Y'
                                    description: 'When project development will end.'
                                    example: '"25/05/2021"'
                            required:
                                - name
                                - description
                                - total_cells
                                - cost_per_cell
                                - profit
                                - maturity_period
                                - start_date
                                - end_date
                                - ad_due_date
                                - due_date
            security: []
    '/admin/projects/{project}':
        get:
            summary: 'GET Single Project'
            description: 'Get information on a single project'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Projects - ADMIN'
            security: []
        put:
            summary: 'PUT Project'
            description: 'Update project data. This should be a POST request'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Projects - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: 'Name of project.'
                                    example: '"5KVA Solar Mini-Grid"'
                                description:
                                    type: string
                                    description: 'Detailed description of projects.'
                                    example: est
                                total_cells:
                                    type: integer
                                    description: 'Total number of cells the project has.'
                                    example: 50
                                cost_per_cell:
                                    type: integer
                                    description: 'Investment cost per cell.'
                                    example: 5000
                                profit:
                                    type: numeric
                                    description: 'Expected percentage profit after maturity'
                                    example: '10.5'
                                maturity_period:
                                    type: integer
                                    description: 'How long it will take for investment to mature in weeks.'
                                    example: 20
                                start_date:
                                    type: 'date_format:d/m/Y'
                                    description: 'When project development will start.'
                                    example: '"25/04/2021"'
                                end_date:
                                    type: string
                                    description: 'The value must be a valid date in the format d/m/Y.'
                                    example: 09/04/2021
                                ad_due_date:
                                    type: 'date_format:d/m/Y'
                                    description: 'When this investment ad will expire.'
                                    example: '"20/04/2021"'
                                _method:
                                    type: string
                                    description: 'This will tell backend to see it as an update request.'
                                    example: '"PUT"'
                                due_date:
                                    type: 'date_format:d/m/Y'
                                    description: 'When project development will end.'
                                    example: '"25/05/2021"'
                            required:
                                - name
                                - description
                                - total_cells
                                - cost_per_cell
                                - profit
                                - maturity_period
                                - start_date
                                - end_date
                                - ad_due_date
                                - _method
                                - due_date
            security: []
        delete:
            summary: 'DELETE Project'
            description: 'Soft delete a project. This should be a POST request'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Projects - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                _method:
                                    type: string
                                    description: 'This will tell backend that its actually a delete request.'
                                    example: '"DELETE"'
                            required:
                                - _method
            security: []
        parameters:
            -
                in: path
                name: project
                description: ''
                example: voluptas
                required: true
                schema:
                    type: string
    /user/users:
        get:
            summary: 'GET Users'
            description: 'List all users with extra details'
            parameters:
                -
                    in: query
                    name: page
                    description: 'Which page to show.'
                    example: 3
                    required: false
                    schema:
                        type: integer
                        description: 'Which page to show.'
                        example: 3
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Users
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Users
            security: []
    '/user/users/{user}':
        get:
            summary: 'GET User'
            description: 'Get information on a single user'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Users
            security: []
        put:
            summary: 'PUT User'
            description: 'Update user data. This should be a POST request'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstName:
                                    type: string
                                    description: 'Firstname of user.'
                                    example: '"Damilare"'
                                lastName:
                                    type: string
                                    description: 'Surname/Last name of user.'
                                    example: '"Abi"'
                                phone:
                                    type: numeric
                                    description: 'Phone number of user.'
                                    example: '"Abi"'
                                update_type:
                                    type: string
                                    description: 'in:profile,password What type of update whether for profile data or password.'
                                    example: '"profile"'
                                _method:
                                    type: string
                                    description: 'This will tell backend to see it as an update request.'
                                    example: '"PUT"'
                                current_password:
                                    type: string
                                    description: 'min:6 Account password.'
                                    example: '"123456"'
                                password:
                                    type: string
                                    description: 'min:6 Account password.'
                                    example: '"123456"'
                                password_confirmation:
                                    type: string
                                    description: 'min:6 Retype account password.'
                                    example: '"123456"'
                            required:
                                - update_type
                                - _method
            security: []
        delete:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Users
            security: []
        parameters:
            -
                in: path
                name: user
                description: ''
                example: in
                required: true
                schema:
                    type: string
    /admin/users:
        get:
            summary: 'GET Users'
            description: 'List all users with extra details'
            parameters:
                -
                    in: query
                    name: page
                    description: 'Which page to show.'
                    example: 3
                    required: false
                    schema:
                        type: integer
                        description: 'Which page to show.'
                        example: 3
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Users - ADMIN'
            security: []
        post:
            summary: 'POST User'
            description: 'Create a new user'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Users - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstName:
                                    type: string
                                    description: 'Firstname of user.'
                                    example: '"Damilare"'
                                lastName:
                                    type: string
                                    description: 'Surname/Last name of user.'
                                    example: '"Abi"'
                                email:
                                    type: email
                                    description: 'Email address of user.'
                                    example: '"test@test.com"'
                                phone:
                                    type: numeric
                                    description: 'Phone number of user.'
                                    example: '"Abi"'
                                password:
                                    type: string
                                    description: 'min:6 Account password.'
                                    example: '"123456"'
                                password_confirmation:
                                    type: string
                                    description: 'min:6 Retype account password.'
                                    example: '"123456"'
                            required:
                                - firstName
                                - lastName
                                - email
                                - password
                                - password_confirmation
            security: []
    '/admin/users/{user}':
        get:
            summary: 'GET User'
            description: 'Get information on a single user'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Users - ADMIN'
            security: []
        put:
            summary: 'PUT User'
            description: 'Update user data. This should be a POST request'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Users - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstName:
                                    type: string
                                    description: 'Firstname of user.'
                                    example: '"Damilare"'
                                lastName:
                                    type: string
                                    description: 'Surname/Last name of user.'
                                    example: '"Abi"'
                                phone:
                                    type: numeric
                                    description: 'Phone number of user.'
                                    example: '"Abi"'
                                update_type:
                                    type: string
                                    description: 'in:profile,password What type of update whether for profile data or password.'
                                    example: '"profile"'
                                _method:
                                    type: string
                                    description: 'This will tell backend to see it as an update request.'
                                    example: '"PUT"'
                                current_password:
                                    type: string
                                    description: 'min:6 Account password.'
                                    example: '"123456"'
                                password:
                                    type: string
                                    description: 'min:6 Account password.'
                                    example: '"123456"'
                                password_confirmation:
                                    type: string
                                    description: 'min:6 Retype account password.'
                                    example: '"123456"'
                            required:
                                - update_type
                                - _method
            security: []
        delete:
            summary: 'DELETE User'
            description: 'Soft delete a user. This should be a POST request'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Users - ADMIN'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                _method:
                                    type: string
                                    description: 'This will tell backend that its actually a delete request.'
                                    example: '"DELETE"'
                            required:
                                - _method
            security: []
        parameters:
            -
                in: path
                name: user
                description: ''
                example: praesentium
                required: true
                schema:
                    type: string
